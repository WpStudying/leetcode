#include <stdio.h>
#include <stdlib.h>


 // Definition for singly-linked list.
  struct ListNode {
      int val;
      struct ListNode *next;
 };
 
struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2) 
	{
		if(l1 == NULL && l2 == NULL)
		{
			return NULL;
		}
	
		if(l1 == NULL)
			return l2;
		if(l2 == NULL)
			return l1;
	
		struct ListNode *templ1 = l1, *templ2 = l2;
		struct ListNode *new = NULL,  *tempptr = NULL;
		int temp = 0;
		
		new =malloc(sizeof(struct ListNode));
		new->val = (templ1->val + templ2->val)%10 + temp;
		new->next = NULL;
		tempptr = new;
		
		temp = (templ1->val + templ2->val)/10;
		templ1 = templ1->next;
		templ2 = templ2->next;
		
		while(templ1 && templ2 )
		{
				tempptr->next = malloc(sizeof(struct ListNode ));
				tempptr = tempptr->next;
				tempptr->val = (templ1->val + templ2->val + temp)%10 ;
				tempptr->next = NULL;
				temp = (templ1->val + templ2->val+temp)/10;

				templ1 = templ1->next;
				templ2 = templ2->next;
		}
	
		for(templ1;templ1 != NULL;templ1 =templ1->next)
			{
				tempptr->next = malloc(sizeof(struct ListNode ));
				tempptr = tempptr->next;
				tempptr->val = (templ1->val + temp)%10;
				tempptr->next = NULL;
				
				temp = (templ1->val + temp)/10;
			}
	
		for(templ2;templ2 != NULL;templ2 =templ2->next)
			{
				tempptr->next = malloc(sizeof(struct ListNode ));
				tempptr = tempptr->next;
				tempptr->val = (templ2->val + temp)%10;
				tempptr->next = NULL;
				
				temp = (templ2->val + temp)/10;
			}
		if(temp == 1)
			{
				tempptr->next = malloc(sizeof(struct ListNode ));
				tempptr = tempptr->next;
				tempptr->val =  temp;
				tempptr->next = NULL;
			}

		return new;
	}


int main(int argc, char **argv)
{
	struct ListNode *l1 = NULL, *templ1 = NULL;
	struct ListNode *l2 = NULL, *templ2 = NULL;
	struct ListNode *sum = NULL;

	templ1 = malloc(sizeof(struct ListNode ));
	templ1->val = 7;
	templ1->next = NULL;
	l1 = templ1;
	

	templ1->next =malloc(sizeof(struct ListNode ));
	templ1->next->val = 3;
	templ1->next->next = NULL;
	templ1=templ1->next;
	
/*
	templ1->next =malloc(sizeof(struct ListNode ));
	templ1->next->val = 3;
	templ1->next->next = NULL;
	templ1 = templ1->next;
*/
/*	
	l2 = malloc(sizeof(struct ListNode ));
	templ2 = l2;
	templ2->val = 0;
	templ2->next = NULL;
/*		
	templ2->next =malloc(sizeof(struct ListNode ));
	templ2 = templ2->next;
	templ2->val = 6;
	templ2->next = NULL;
		
	templ2->next =malloc(sizeof(struct ListNode ));
	templ2 = templ2->next;
	templ2->val = 4;
	templ2->next = NULL;
*/		

	for(templ1 = l1;templ1 != NULL; templ1 = templ1->next)
	{
		printf(" %d ",templ1->val);
	}			
		
	sum = addTwoNumbers(l1,l2);
	if(sum)
		{
			printf("sum is:");
			for(templ1 = sum;templ1 != NULL; templ1 = templ1->next)
				{
					printf(" %d ",templ1->val);
				}
			printf("\n");	
		}
}



















